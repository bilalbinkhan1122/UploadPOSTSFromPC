import pandas as pd


logo = '''
 _____              _ _____    _ _ _             
| ____|_  _____ ___| | ____|__| (_) |_ ___  _ __ 
|  _| \ \/ / __/ _ \ |  _| / _` | | __/ _ \| '__|
| |___ >  < (_|  __/ | |__| (_| | | || (_) | |   
|_____/_/\_\___\___|_|_____\__,_|_|\__\___/|_|   
'''

def export_and_remove_rows(input_file, output_file):
    """Exports specified rows and removes them from the original file."""
    try:
        df = pd.read_excel(input_file)
        total_rows = len(df)
        print(f"Total Rows: {total_rows}")
        num_rows = int(input('Number of rows to export: '))
        
        if num_rows > total_rows:
            print("The number of rows to export exceeds the available rows.")
            return
        
        rows_to_export = df.iloc[:num_rows]
        rows_to_export.to_excel(output_file, index=False)
        print(f"{num_rows} rows have been exported to {output_file}")
        
        df_remaining = df.iloc[num_rows:]
        df_remaining.to_excel(input_file, index=False)
        print(f"Remaining rows saved back to {input_file}")
    except Exception as e:
        print(f"An error occurred: {e}")

def remove_duplicates(input_file, output_file):
    """Removes duplicate rows from an Excel file."""
    try:
        df = pd.read_excel(input_file)  # Always process the first sheet
        total_rows = len(df)
        df_no_duplicates = df.drop_duplicates(subset=['Link'])
        remaining_rows = len(df_no_duplicates)
        rows_removed = total_rows - remaining_rows

        df_no_duplicates.to_excel(output_file, index=False)
        print(f"Duplicate rows removed. Cleaned data saved to '{output_file}'.")
        print(f"Total Rows: {total_rows}, Rows Removed: {rows_removed}, Rows Left: {remaining_rows}.")
    except Exception as e:
        print(f"An error occurred: {e}")

def filter_likes(file_path):
    """Filters rows based on the minimum number of Likes."""
    try:
        df = pd.read_excel(file_path)  # Always process the first sheet
        min_likes = int(input("Enter the minimum number of Likes: "))
        
        removed_rows = df[df['Likes'] < min_likes]
        filtered_df = df[df['Likes'] >= min_likes]
        filtered_df.to_excel(file_path, index=False)

        print(f"\nFiltered data has replaced the original file: {file_path}")
    except Exception as e:
        print(f"An error occurred: {e}")

def main():
    print(logo)
    print("Select an option:")
    print("1. Export and Remove Rows")
    print("2. Remove Duplicate Rows")
    print("3. Filter Rows by Likes")

    choice = input("Enter your choice (1/2/3): ")
    
    if choice == '1':
        input_excel = input('Main Excel file: ')
        output_excel = input('File to save exported rows: ') + '.xlsx'
        export_and_remove_rows(input_excel, output_excel)
    
    elif choice == '2':
        input_file = input('Input Excel to remove duplicate rows: ')
        output_file = input('Output file (or press Enter to overwrite the original file): ')
        output_file = output_file if output_file else input_file
        remove_duplicates(input_file, output_file)
    
    elif choice == '3':
        file_path = input("Enter the Excel file path (including .xlsx): ")
        filter_likes(file_path)
    
    else:
        print("Invalid choice. Please run the script again.")

if __name__ == "__main__":
    main()
